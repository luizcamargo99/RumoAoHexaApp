@page "/"

<div class="main-content">
    @foreach (var sound in _sounds)
    {
        <div class="item">
            <h1>@sound.DisplayName</h1>
            <MainButton IsActive="@sound.Active" OnClick="async()=> { await PlaySoundAsync(sound); }" />
            <audio id="@sound.FileName" src="@($"/sounds/{sound.FileName}")" class="audios" onended="@(() => { SoundEnded(sound); })" />
        </div>
    }
</div>

@code {
    private List<Sound> _sounds { get; set; } = new()
    {
        new Sound() { DisplayName = "VUVUZELA 01", FileName = "vuvuzela_1.mp3" },
        new Sound() { DisplayName = "VUVUZELA 02", FileName = "vuvuzela_2.mp3" },
        new Sound() { DisplayName = "VUVUZELA 03", FileName = "vuvuzela_3.mp3" },
        new Sound() { DisplayName = "BRASIL SIL SIL SIL (CLÁSSICO)", FileName = "brasil_sil_sil_classico.mp3" },
        new Sound() { DisplayName = "BRASIL SIL SIL SIL (2022)", FileName = "brasil_sil_sil_2022.mp3"},
        new Sound() { DisplayName = "ACABOU! É TETRA!! ", FileName = "e_tetra.mp3" },
        new Sound() { DisplayName = "OLHA O GOL! OLHA O GOL!", FileName = "olha_o_gol.mp3"},
        new Sound() { DisplayName = "OLHO NO LANCE", FileName = "olho_no_lance.mp3" },
        new Sound() { DisplayName = "BATE PRO GOL NEYMAR!", FileName = "bate_pro_gol_neymar.wav" },
        new Sound() { DisplayName = "58 FOI PELÉ - MÚSICA DO HEXA", FileName = "musica_do_hexa.mp3" },
        new Sound() { DisplayName = "HINO NACIONAL", FileName = "hino_nacional.mp3" },
    };

    private async Task PlaySoundAsync(Sound sound)
    {
        if (sound.Active)
        {
            await PauseActiveSoundAsync(sound);
            return;
        }

        var soundActive = _sounds.FirstOrDefault(x => x.Active);

        if (soundActive is not null)
            await PauseActiveSoundAsync(soundActive);

        sound.Active = !sound.Active;
        await InvokeAsync(StateHasChanged);
        await soundService.PauseAsync();
        await soundService.PlayAsync(sound.FileName);
    }

    private void SoundEnded(Sound sound)
    {
        sound.Active = false;
        StateHasChanged();
    }

    private async Task PauseActiveSoundAsync(Sound sound)
    {
        await soundService.PauseAsync(sound.FileName);
        sound.Active = !sound.Active;
        await InvokeAsync(StateHasChanged);
    }
}
